plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.1.6'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.modelmapper:modelmapper:3.1.0'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.1.0'
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'			//QueryDSL 추가1
	implementation 'com.querydsl:querydsl-apt:5.0.0:jakarta'			//QueryDSL 추가2
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'	//설정 작업시 필요한 속성과 지정 가능한 값들과 메소드를 표시해주므로써 쉽게 작성할 수 있도록 도움을 줌
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'		//QueryDSL 추가3
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api:2.1.1'		//QueryDSL 추가4
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'			//QueryDSL 추가5
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testAnnotationProcessor 'org.projectlombok:lombok'	/* Test 에서 Slf4j 또는 Log4j2 사용1 */
	testCompileOnly 'org.projectlombok:lombok' /* Test 에서 Slf4j 또는 Log4j2 사용2 */
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}
